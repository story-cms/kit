{{{
  exports({ to: app.makePath('app/controllers/analytics_controller.ts') })
}}}
import type { HttpContext } from '@adonisjs/core/http';
import cache from '@adonisjs/cache/services/main';
import vine from '@vinejs/vine';
import { Analytics, emptyAnalyticsReport, analyticsConfigSchema } from '@story-cms/kit';
import config from '#config/analytics';

export default class AnalyticsController {
  public async index({ logger, response }: HttpContext) {
    const cachedReport = await cache.get({ key: config.cacheKey });
    if (cachedReport) {
      return cachedReport;
    }

    try {
      // Validate the config before using it
      const result = await vine.tryValidate({
        schema: analyticsConfigSchema,
        data: config,
      });

      if (result[0] instanceof Error) {
        logger.error(result[0]);
        return response.status(500).json({
          message: 'Analytics config is invalid. Check config/analytics.ts',
        });
      }

      const ga = new Analytics(config);
      const report = await ga.report(config.chapterCompletionReportKey);
      await cache.set({ key: config.cacheKey, value: report, ttl: '1h' });

      return report;
    } catch (error) {
      logger.error(error);
      return emptyAnalyticsReport;
    }
  }
}
