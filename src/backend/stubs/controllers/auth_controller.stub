{{{
  exports({ to: app.makePath('app/controllers/auth_controller.ts') })
}}}
import type { HttpContext } from '@adonisjs/core/http';
import User from '#models/user';
import Activity from '#models/activity';
import ActivityService from '#services/activity_service';

export default class AuthController {
  private async logActivity(
    userId: number | undefined,
    locale: string,
    action: Activity['action'],
  ) {
    if (!userId) return;

    const activity = new ActivityService();
    await activity.logAction(userId, locale, 'user', action);
  }

  public async index(ctx: HttpContext) {
    return ctx.inertia.render('Login');
  }

  public async store(ctx: HttpContext) {
    const { email, password } = ctx.request.only(['email', 'password']);

    try {
      const user = await User.verifyCredentials(email, password);
      await ctx.auth.use('web').login(user);
      await this.logActivity(user.id, user.defaultLanguage(), 'login');
      ctx.session.put('locale', user.defaultLanguage());
      ctx.response.redirect('/');
    } catch {
      ctx.session.flash('errorsBag', { credentials: 'Invalid username or password' });
      ctx.response.redirect().back();
    }
  }

  public async logout(ctx: HttpContext) {
    ctx.session.clear();
    await this.logActivity(ctx.auth.user?.id, ctx.version.locale, 'logout');
    await ctx.auth.use('web').logout();
    ctx.response.redirect('/login');
  }
}
