// see: https://github.com/adonisjs/inertia/blob/64875158a2516c47f6ec13820c541161eb890f97/stubs/config.stub
{{{
  exports({ to: app.configPath('inertia.ts') })
}}}
import { defineConfig } from '@adonisjs/inertia';
import type { InferSharedProps } from '@adonisjs/inertia/types';
import storyConfig from '#config/story';
import { LanguageSpecification } from '@story-cms/kit';
import { UiService } from '#services/ui_service';
import { HttpContext } from '@adonisjs/core/http';

const getLanguage = (locale: string | null): LanguageSpecification => {
  const found =
    storyConfig.languages.find((language) => language.locale === locale) ||
    storyConfig.languages[0];
  return found as LanguageSpecification;
};

const getTodoCount = async (ctx: HttpContext) => {
  // don't show todo count if there is only one language
  if (storyConfig.languages.length < 2) return 0;

  // don't show todo count if user is not logged in
  if (!ctx.auth?.use('web')?.user) return 0;

  const locale = ctx.session?.get('locale');
  if (!locale) return 0;

  // count not needed for source language
  if (locale === storyConfig.languages[0].locale) {
    return 0;
  }

  const service = new UiService(storyConfig.languages[0].locale);
  return await service.getTodoCount(locale);
};

const inertiaConfig = defineConfig({
  /**
   * Path to the Edge view that will be used as the root view for Inertia responses
   */
  rootView: 'inertia_layout',

  /**
   * Data that should be shared with all rendered pages
   */
  sharedData: {
    stories: () => storyConfig.stories.map((item) => item.name),
    meta: () => storyConfig.meta,
    user: (ctx) => ctx.auth?.use('web')?.user,
    language: (ctx) => getLanguage(ctx.params.locale ?? 'en'),
    languages: () => storyConfig.languages,
    errors: (ctx) => ctx.session?.flashMessages.get('errors') ?? {},
    uiTodoCount: (ctx) => getTodoCount(ctx),
  },

  /**
   * Options for the server-side rendering
   */
  ssr: {
    enabled: false,
    entrypoint: 'inertia/app/ssr.ts',
  },
});

export default inertiaConfig;

declare module '@adonisjs/inertia/types' {
  export interface SharedProps extends InferSharedProps<typeof inertiaConfig> {}
}
