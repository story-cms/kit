// see: https://github.com/adonisjs/inertia/blob/64875158a2516c47f6ec13820c541161eb890f97/stubs/config.stub
{{{
  exports({ to: app.configPath('inertia.ts') })
}}}
import { defineConfig } from '@adonisjs/inertia';
import type { InferSharedProps } from '@adonisjs/inertia/types';
import type { LanguageSpecification, StorySpec } from '@story-cms/kit';
import cmsConfig from '#config/cms';

const getLanguage = (locale: string | null): LanguageSpecification => {
  const found =
    cmsConfig.languages.languages.find(
      (language: LanguageSpecification) => language.locale === locale,
    ) || cmsConfig.languages.languages[0];
  return found as LanguageSpecification;
};

const inertiaConfig = defineConfig({
  /**
   * Path to the Edge view that will be used as the root view for Inertia responses
   */
  rootView: 'inertia_layout',

  /**
   * Data that should be shared with all rendered pages
   */
  sharedData: {
    meta: () => cmsConfig.meta,
    user: (ctx) => ctx.auth?.use('web')?.user,
    language: (ctx) => getLanguage(ctx.params.locale ?? 'en'),
    languages: () => cmsConfig.languages.languages,
    errors: (ctx) => ctx.session?.flashMessages.get('errors') ?? {},
    stories: () => cmsConfig.stories.stories.map((item: StorySpec) => item.name),
  },

  /**
   * Options for the server-side rendering
   */
  ssr: {
    enabled: false,
    entrypoint: 'inertia/app/ssr.ts',
  },
});

export default inertiaConfig;

declare module '@adonisjs/inertia/types' {
  export interface SharedProps extends InferSharedProps<typeof inertiaConfig> {}
}
